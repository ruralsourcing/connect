generator client {
  provider        = "prisma-client-js"
  binaryTargets   = ["native", "linux-musl"]
  previewFeatures = ["groupBy"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  email     String     @unique
  domain    String?
  Profile   Profile?
  ZoomAuth  ZoomAuth?
  SlackUser SlackUser?
  Meeting   Meeting[]
  Skill     Skill[]
}

model Profile {
  id         Int     @id @default(autoincrement())
  name       String?
  givenName  String?
  familyName String?
  picture    String?
  userId     Int?    @unique
  User       User?   @relation(fields: [userId], references: [id])
}

model ZoomAuth {
  id     Int    @id @default(autoincrement())
  token  String
  userId Int?   @unique
  user   User?  @relation(fields: [userId], references: [id])
}

model Meeting {
  id         Int    @id @default(autoincrement())
  uuid       String @unique
  host_id    String
  host_email String
  topic      String
  start_url  String
  join_url   String
  password   String
  userId     Int?
  User       User?  @relation(fields: [userId], references: [id])
}

model SlackUser {
  id      Int    @id @default(autoincrement())
  slackId String
  teamId  String
  userId  Int?
  User    User?  @relation(fields: [userId], references: [id])
}

model Skill {
  id     Int   @id @default(autoincrement())
  userId Int
  User   User  @relation(fields: [userId], references: [id])
  techId Int?
  Tech   Tech? @relation(fields: [techId], references: [id])
  rating Int
}

model Tech {
  id          Int     @id @default(autoincrement())
  name        String
  description String?
  icon        String?
  Skill       Skill[]
}
