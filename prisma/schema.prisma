generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  email     String     @unique
  name      String?
  Meeting   Meeting[]
  ZoomAuth  ZoomAuth?
  SlackUser SlackUser?
  Skill     Skill[]
}

model ZoomAuth {
  id     Int    @id @default(autoincrement())
  token  String
  userId Int?   @unique
  user   User?  @relation(fields: [userId], references: [id])
}

model Meeting {
  id         Int    @id @default(autoincrement())
  uuid       String @unique
  host_id    String
  host_email String
  topic      String
  start_url  String
  join_url   String
  password   String
  userId     Int?
  User       User?  @relation(fields: [userId], references: [id])
}

model SlackUser {
  id      Int    @id @default(autoincrement())
  slackId String
  teamId  String
  userId  Int?
  User    User?  @relation(fields: [userId], references: [id])
}

model Skill {
  id     Int  @id @default(autoincrement())
  userId Int
  User   User @relation(fields: [userId], references: [id])
  techId Int
  Tech   Tech @relation(fields: [techId], references: [id])
  rating Int
}

model Tech {
  id    Int     @id @default(autoincrement())
  name  String
}
